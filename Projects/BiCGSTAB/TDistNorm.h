/* Generated by Together */

#ifndef TDISTNORM_H
#define TDISTNORM_H
#include "ooptask.h"
class OOPMReturnType;
class OOPObjectId;

/**
 * Computes the distributed norm
 * @since 04/12/2003
 * @author Gustavo C. Longhin 
 */
class TDistNorm : public OOPTask {
public:

	/**
	* Returns the estimated execution time.
	* returns 0 if the task is instantaneous
	* returns > 0 if estimate is known
	* return < 0 if no estimate is known
	*/
	virtual long ExecTime ();

	/**
	* Execute the task, verifying that all needed data acesses are satisfied.
	*/
	virtual OOPMReturnType Execute ();

	/**
	* Returns last created Id.
	*/
	virtual long GetClassID ()
	{
		return TDISTNORM_ID;
	}

private:
	/**
	 * Holds the upon which the norm will be calculated
	 */
    vector <double> fVector;
	/**
	 * Computes norm contribution from current processor
	 */
	double ComputeLocalNorm();
	/**
	 * Holds the Id of the object which will receive the contribution
	 */
	OOPObjectId fId_Target;
	
};
#endif //TDISTNORM_H
