/* Generated by Together */

#ifndef TTASKTEST_H
#define TTASKTEST_H
#include "ooptask.h"
#include "../gnu/gnudefs.h"
#include "tmultidata.h"
#include "tresultdata.h"
#include "ooptask.h"

class OOPSaveable;

class OOPSendStorage;
class OOPReceiveStorage;

class TTaskTest : public OOPTask {
public:
	
static	OOPSaveable * Restore(OOPReceiveStorage *buf);
	
//	TMultiTask();
public:
	
	TTaskTest(int i);
	//TMultiTask(TMultiData & data, TResultData & resdata);
	void SetData(TMultiData & data, TResultData & resdata);
	
    /**
    * Returns the estimated execution time.
    * returns 0 if the task is instantaneous
    * returns > 0 if estimate is known
    * return < 0 if no estimate is known
    */
	virtual long ExecTime ();

    /**
    * Execute the task, verifying that all needed data acesses are satisfied.
    */
	virtual OOPMReturnType Execute ();

    /**
    * Returns last created Id.
    */
	virtual long GetClassID ()
	{
		return 3001;
	}

    /**
    * Virtual Unpack function.
    * Defines the necessary interface for task communication along the network.
    * @param * buf Buffer for data manipulation.
    */
	virtual int Unpack (OOPReceiveStorage * buf);

	virtual int Pack (OOPSendStorage * buf);

    /**
    * Returns class name
    */
	virtual char *ClassName ()
	{
		return ("TTaskTest");
	}

    /**
    * Returns true if the object belongs to a class derived from the specified classid
    * @param ClassId Id of inquired super class
    */
	virtual int DerivedFrom (long Classid);

    /**
    * Returns true if the object belongs to a class derived from the specified class name
    * @param classname Name of inquired super class
    */
	virtual int DerivedFrom (char *classname);
};
#endif //TTASKTEST_H
