/* Generated by Together */
#ifndef TTASKCOMM_H
#define TTASKCOMM_H

#include "ooptask.h"
#include "fluxdefs.h"

class   OOPStorageBuffer;

/**
 * @brief Implements the communication itself among partitions.
 * @author Gustavo Camargo Longhin
 * @version 0.8
 * @since 12/06/2003 
 */
/**
 * The class attribution is to perform the contribution on the destinatio partition.
 * TLocalCompute objects which contributes on another partitions perform such contribution with objects of this class.
 */
class   TTaskComm:public OOPTask
{
public:
	virtual ~TTaskComm(){}
    /**
     * Virtual function must be redefined.
     * Used by the TM to access the task´s functinality. 
     */
	OOPMReturnType Execute ();
	void     Write (TPZStream & buf, int withclassid=0);
	/**
	* Virtual Unpack function.
	* Defines the necessary interface for task communication along the network.
	* @param * buf Buffer for data manipulation.
	*/
	void     Read (TPZStream & buf, void * context = 0);
  /**
   * Returns a Class ID identifier
   */
	virtual int ClassId () const {
		return TTASKCOMM_ID;
	}
	static TPZSaveable *Restore (TPZStream & buf, void * context = 0);
	TTaskComm (int ProcId);
	TTaskComm ();
};

extern ofstream TaskLog;

#endif // TTASKCOMM_H
