/* Generated by Together */

#include "OOPInt.h"

#include <sstream>
#include <pzlog.h>
#ifdef LOG4CXX
static LoggerPtr logger(Logger::getLogger("OOPAR.OOPInt"));
#endif


OOPInt::OOPInt() : TPZSaveable() , fValue(0) 
{
}

void OOPInt::Read(TPZStream & buf, void * context){
    TPZSaveable::Read(buf, context);
    buf.Read(&fValue);
    int clsid = 0;
    buf.Read(&clsid);
    if(clsid!=ClassId()){
		LOGPZ_ERROR(logger, "ClassId missmatch on OOPInt::Read");
    }
	
}
void OOPInt::Write(TPZStream & buf, int withclassid){
    TPZSaveable::Write(buf, withclassid);
    buf.Write(&fValue);
    int clsid = ClassId();
    buf.Write(&clsid);
}
int OOPInt::ClassId() const {
    return OOPINT_ID;
}
template class TPZRestoreClass<OOPInt, OOPINT_ID>;

